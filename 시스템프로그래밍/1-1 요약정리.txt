1차시 요약정리


1. kernel 수준에서 시스템 호출을 통해 프로그래밍하는 방법을 학습

   일반프로그래밍
-  다양한 고급 언어의 프로그래밍
-  라이브러리를 통한 학습
   시스템프로그래밍
-  kernel 수준에서 프로그래밍
-  라이브러리를 만드는 방법을 학습

유닉스의 개요
유닉스 시스템 개요
유닉스 프로그래밍

시스템 호출을 이해, 유닉스 운영체제의 기본적인 동작을 파악
저수준에서 프로그래밍을 수행하여 유닉스의 기본 원리를 학습

파일 입출력 시스템 호출 설명
디렉토리를 만들고 저장
프로세스 관련 시스템 호출을 프로그래밍
프로세스간 통신 관련 시스템 호출을 프로그래밍

kernel이란 사용자와 unix 운영체제 시스템 사이에 위치하여 명령어 해석기로서 동작하는 프로그램이다.


1. 유닉스의 역사와 특징

- AT&T에 의해 1960년대 말에 개발되어 지금까지 사용되고 있는 컴퓨터 운영체제
- 시스템용 운영체제로 사용되어오다, 최근 PC용 운영체제로거듭남
- 다양한 버전의 유닉스 운영체제 등장

- BSD 계열
 가상 메모리 지원
 C쉘 작업 제어
 TCP/IP 네트워킹 추가
- 시스템 V 계열
 AT&T의 유닉스 버전들을 통칭
- POSIX 계열
 IEEE/ANSI가 제시한 개방형 운영체제 권고안을 토대로 작성한 개념적인 운영체제
 POSIX 1003.1은 유닉스 형태의 운영체제로 최소의 인터페이스만을 정의


1960 

Multics OS
AT&T Bell Labs가 GE, MIT, MAC와 공동으로 개발
멀티태스킹이 가능하였으나 속도문제 등으로 69년 개발 중단

UNIX OS
벨 연구소의 켄 톰슨 개발
소프트웨어적인 환경과 파일시스템을 DEC PDP-7 어셈블리로 구현
최초의 UNIX


1970

C 언어 탄생
1971년 벨 연구소의 데니스 리치가 고안
기계어 코드 생성
자료형 선언
자료 구조의 선언 등을 허용

UNIX 
1973년 C로 다시쓰여짐
최소한의 코드를 제외하면 전체 시스템을 다른환경으로 쉽게 이식가능

UNIX BSD
1977년 버클리대학에서 네트웍 기능을 보강

1980

System V

1983년 AT&T에서 개발
1974년 System V Release 2 개발
1986년 Release 3 개발

Unix BSD

1983년 버클리 BSD 4.2 개발
1984년 BSD 4.3 개발

XENIX

1983년 MS사와 산타크루즈 오퍼레이션이 PC용 유닉스로 개발
BASIC, COBOL, FORTRAN, Pascal등의 프로그래밍 언어도 사용가능

1990년대 이후

많은 유닉스 버전 발표

UNIX System V
Sun, 애플, IBM에서도 자사 UNIX 발표
FreeBSD가 PC용으로 포팅

유닉스 표준화 그룹 활동

AT&T< IBM 등의 기업들을 중심으로 UI그룹, OSF그룹이 활성화

- 유닉스의 특징

 멀티 유저와 멀티 태스킹이 가능
  한대의 컴퓨터를 동시에 여러명이 사용가능하고 여러 작업이 동시에 처리가능
 뛰어난 통신 기능
  프로세스간 통신을 위해 단 방향 자료 채널이라는 파이프 매커니즘을 제공
 쉘 사용자 인터페이스 제공
 계층적 트리 구조의 파일 시스템
  하나의 파일로서 관리하여 효율적인 관리가 가능
 소스 및 라이브러리가 개방
  C 언어로 작성되어 있어 다양한 소스 및 라이브러리 개방 가능
 높은 호환성과 이식성
  모듈화가 되어 있어 기종이 바뀌더라도 소프트웨어의 전환에 시간과 노력을 최소화 가능
  좋은 개발 환경과 쉬운 개발이 이루어 지도록 해줌
 수많은 툴과 유틸리티
  사용자나 시스템 관리자로 하여금 쉽게 시스템을 사용 또는 운영할 수 있게 해줌
 자원의 공유 가능
  우선순위를 기반으로, 동일한 크기의 시간 조각으로 나누어 CPU를 공유
  메모리를 동일한 크기의 페이지로 나누어 프로세스 사이에서 공유
  디스크를 동일한 크기의 블록으로 나우어 사용자들에게 블록 할당


2. 쉘과 허가권

Unix 쉘 정의

 명령어 해석기로서 동작하는 프로그램(DOS의 command와 유사

 Korn쉘, Bourne 쉘, C 쉘 핵심 연산 부분(커널)은 함께 공유

쉘의 기능

내장명령어, 스크립트, 변수, 리다이렉션, 대표문자, 파이프, 명령열, 서브쉘, 후면처리, 명령어치환

쉘의 표준 입출력

 사용자의 키보드가 아닌 다른것을 표준입력으로 지정하는 기능
파일 : 파일의 내요을 사용자가 타이핑한 것처럼 프로그램에 입력
파이프 : 다른 프로그램의 출력이 사용자가 타이핑한것처럼 프로그램에 입력

파일로부터 표준 입력을 받겠다는 것을 쉘에게 알리려면 < 사용
ex ) $ sort < nums : 파일 nums의 행등을 입력받아 정렬하여 그 결과를 표준출력에 보냄


사용자의 스크린이 아닌 다른것을 표준 출력 또는 표준 에러로 지정하는 기능
파일 : 프로그램의 출력물을 파일에 저장
파이프 : 프로그램의 출력물이 다른 프로그램의 입력으로 사용

프로그램의 출력물을 파일에 저장하겠다는 것을 쉘에게 알리려면 > >> 2> 문자를 사용

$ ls > lsout : ls 명령어의 출력을 lsout 파일을 새로 만들어 저장
$ ls >> lsout : ls 명령어의 출력을 lsout 파일에 추가로 저장
$ ls 2> lsout : ls 명령어의 에러 출력을 lsout파일에 저장

파이프 : 프로그램의 출력을 다른 프로그램의 입력으로 사용
두 명령어를 : 문자로 분리하면, 앞에 있는 명령의 출력이 뒤에 있는 명령어의 입력으로 사용
$ ls : sort : ls의 명령어의 출력이 정렬되어 표준출력으로 출력
$ ls : sort > sortout ls 명령어의 출력을 정렬렬하여 sortout에 저장

허가권은 해당 파일에 대한 접근 권한을 의미

파일의 종류, 소유자에 대한 권한, 소유 그룹에 대한 권한, 다른사람에 대한 권한이 존재

접근 모드 

r : 읽기
w : 쓰기
x : 실행 

chown 

파일에 대한 소유자를 변경
관리자 계정만 실행 가능

chown student file1 : file1의 소유자를 student로 변경

chgrp

파일에 대한 소유 그룹을 변경
관리자 계정만 실행가능

chgrp school file1 : file1의 소유 그룹을 school로 변경

chmod

지정된 파일 및 디렉토리에 대한 접근 모드 변경

- 기호 표현법

 who : u(소유자), g(소유그룹), o(다른 사용자), a(모든 사용자)
 op-code:+(접근허용),-(접근불가)
 mod:r,w,x

chmod uo-w file1 : file1의 소유자와 다른 사용자에게 쓰기 권한을 해제함

- 절대 숫자 표현법
4 : r, 2 : w, 1 : x

chmod 755 file1 : file1의 권한을 rwxr-xr-x로 변환


요약 

유닉스 시스템의 정의
AT&T에 의해 1960년대 말에 개발도이ㅓ 지금까지 사용되고 있는 컴퓨터 운영체제

유닉스 시스템의 특징
멀티 유저와 멀티 태스킹이 가능
뛰어난 통신 기능
쉘 사용자 인터페이스 제공
계층적 트리 구조의 파일 시스템
소스 및 라이브러리가 개방
높은 호환성과 이식성
수많은 툴과 유틸리티, 자원의 공유 가능

쉘과 허가권
쉘은 사용자와 Unix 운영체제 시스템 사이에 위치하여 명령어 해석기로서 동작하는 프로그램
사용자의 입력과 출력을 키보드와 모니터가 아닌 다른 것으로 지정 할 수 있음

